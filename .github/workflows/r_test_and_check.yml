name: R Check

on:
  pull_request:
    branches: [ "develop" ]

jobs:
  R-CMD-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: 'release' 

      - name: Print R version
        run: R --version

      - name: Install comprehensive system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libcurl4-openssl-dev \
            libxml2-dev \
            libssl-dev \
            libudunits2-0 \
            libudunits2-dev \
            proj-bin \
            libproj-dev \
            libgdal-dev \
            libgeos-dev \
            libnetcdf-dev
  
      - name: Set up renv
        uses: r-lib/actions/setup-renv@v2
    
      - name: Install R package
        run: |
          Rscript -e 'devtools::install()'
    
      - name: Regenerate documentation
        run: |
          Rscript -e "roxygen2::roxygenise()"

      - name: Session info
        run: sessionInfo()
        shell: Rscript {0}
      
      - name: Run Tests toward codebase
        run: |
          Rscript -e "devtools::load_all(); testthat::test_dir('tests/testthat')"

      - name: Check (Run Tests toward build package)
        run: |
          tryCatch({
            result <- rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "never"            
            # Print the content of the testthat.Rout file
            test_rout_path <- file.path(result$checkdir, "tests", "testthat.Rout")
            if (file.exists(test_rout_path)) {
              cat("\nContents of testthat.Rout:\n")
              cat(readLines(test_rout_path), sep = "\n")
            } else {
              cat("\ntestthat.Rout file not found.\n")
            }

            errors <- paste(result$errors, collapse = "\n")
            warnings <- paste(result$warnings, collapse = "\n")
            notes <- paste(result$notes, collapse = "\n")
            
            # Save errors, warnings, and notes to files
            write(errors, file = "check_errors.txt")
            write(warnings, file = "check_warnings.txt")
            write(notes, file = "check_notes.txt")
            
          }, error = function(e) {
            cat("An error occurred during rcmdcheck:\n")
            print(e)
          })
        shell: Rscript {0}
        
      - name: Output Errors
        if: always()
        run: |
          if [[ -s check_errors.txt ]]; then
            echo "Errors found:"
            cat check_errors.txt
            exit 1  # Fail the job if there are errors
          else
            echo "No errors."
          fi
      
      - name: Output Warnings
        if: always()
        run: |
          if [[ -s check_warnings.txt ]]; then
            echo "Warnings found:"
            cat check_warnings.txt
          else
            echo "No warnings."
          fi
      
      - name: Output Notes
        if: always()
        run: |
          if [[ -s check_notes.txt ]]; then
            echo "Notes found:"
            cat check_notes.txt
          else
            echo "No notes."
          fi
      