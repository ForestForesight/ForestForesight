name: Styler
on:
  pull_request:
    branches: [ "develop" ]

jobs:
  styling-the-code:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Fetch all history to get the previous commit

    - name: Get previous commit message
      id: get_commit_message
      run: echo "COMMIT_MESSAGE=$(git log -1 --pretty=%B)" >> $GITHUB_ENV

    - name: Print commit message
      run: echo "Previous commit message: '${{ env.COMMIT_MESSAGE }}'"

    - name: Check if commit message is 'Style code with styler'
      id: check_commit
      run: |
        if [[ "${{ env.COMMIT_MESSAGE }}" == "Style code with styler" ]]; then
          echo "::set-output name=skip_job::true"
        else
          echo "::set-output name=skip_job::false"
        fi

    - name: Set up R library environment using custom actions
      if: steps.check_commit.outputs.skip_job == 'false'
      uses: r-lib/actions/setup-r@v2

    - name: Set locale and encoding
      if: steps.check_commit.outputs.skip_job == 'false'
      run: |
        sudo locale-gen en_US.UTF-8
        export LANG=en_US.UTF-8
        export LC_ALL=en_US.UTF-8

    - name: Install Styler and Roxygen2
      if: steps.check_commit.outputs.skip_job == 'false'
      run: |
        Rscript -e "install.packages(c('styler', 'roxygen2'), repos = 'https://cran.rstudio.com/')"

    - name: Style R code
      if: steps.check_commit.outputs.skip_job == 'false'
      run: |
        Rscript -e "styler::style_pkg(include_roxygen_examples = FALSE); warnings()"

    - name: Check for changes
      id: check_changes
      if: steps.check_commit.outputs.skip_job == 'false'
      run: |
        if git diff --quiet; then
          echo "No changes made by styler."
          echo "::set-output name=changes_made::false"
        else
          echo "Changes made by styler."
          echo "::set-output name=changes_made::true"
        fi
  
    - name: Fetch latest changes
      if: steps.check_changes.outputs.changes_made == 'true' && steps.check_commit.outputs.skip_job == 'false'
      run: |
        git fetch origin ${GITHUB_HEAD_REF}:${GITHUB_HEAD_REF}

    - name: Commit changes
      if: steps.check_changes.outputs.changes_made == 'true' && steps.check_commit.outputs.skip_job == 'false'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add .
        git commit -m 'Style code with styler'
        git pull --rebase origin ${GITHUB_HEAD_REF}
        git push origin HEAD:refs/heads/${GITHUB_HEAD_REF}
